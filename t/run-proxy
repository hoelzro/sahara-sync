#!/usr/bin/env perl

use strict;
use warnings;

use AnyEvent::Handle;
use AnyEvent::Socket;
use Guard;
use Plack::App::Proxy;
use Plack::Builder;
use Test::More;
use Twiggy::Server;

sub create_proxy {
    my ( $port, $remote ) = @_;

    my $app = Plack::App::Proxy->new(
        remote  => 'http://localhost:' . $remote,
        backend => 'AnyEvent::HTTP',
    );

    my $server = Twiggy::Server->new(
        host        => '127.0.0.1',
        port        => $port,
        environment => 'production',
    );

    $server->register_service($app);

    return guard {
        delete $server->{'listen_guards'}; # boo, touching internals
        undef $server;
    };
}

my $cond   = AnyEvent->condvar;
my $port   = $ENV{'_PROXY_PORT'};
my $remote = $ENV{'_PROXY_REMOTE_PORT'};

my $proxy = create_proxy($port, $remote);

my $usr1 = AnyEvent->signal(
    signal => 'USR1',
    cb     => sub {
        undef $proxy;
    },
);

my $usr2 = AnyEvent->signal(
    signal => 'USR2',
    cb     => sub {
        $proxy = create_proxy($port, $remote);
    },
);

$cond->recv;
