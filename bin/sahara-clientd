#!/usr/bin/env perl

# Copyright 2011 Rob Hoelz.
#
# This file is part of Sahara Sync.
#
# Sahara Sync is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Sahara Sync is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Sahara Sync.  If not, see <http://www.gnu.org/licenses/>.

use strict;
use warnings;

use Getopt::Long;
use File::Slurp;
use SaharaSync::Clientd;
use SaharaSync::Clientd::Config;
use SaharaSync::Util;

sub show_help {
    print <<"END_HELP";
usage: $0 [opts]

Options:

-c [config file]
--config-file=[config file] Starts Sahara Sync with the given config file.
                            Defaults to ~/.config/sahara-sync/config.json.

-d
--daemon                    Runs Sahara Sync in the background.  Off by default.

-h
--help                      Displays this help and exits.

-p [pid file]
--pidfile=[pid file]        Stores the process' PID in a file.  Only used in
                            daemon mode.
END_HELP
    exit 1;
}

$0 = 'sahara sync: client';

my $config_file;
my $daemon;
my $pidfile;
my $help;

my $result = GetOptions(
    'config-file=s' => \$config_file,
    'daemon'        => \$daemon,
    'pidfile=s'     => \$pidfile,
    'help'          => \$help,
);

show_help if     $help;
show_help unless $result;

my $config = SaharaSync::Clientd::Config->new_from_file($config_file);

if($daemon) {
    SaharaSync::Util->daemonize;

    if($pidfile) {
        write_file($pidfile, $$);
    }
}

my $clientd = SaharaSync::Clientd->new($config);
$clientd->run;
